记录：
7.
在java中用字符串表示文件路径的时候，可以使用斜杠（如果使用反斜杠的话需要转义）

6.
.jsp文件好像只能访问web目录下的内容。

5.
投稿功能，文件数据要入库{
    数据入库的路径不对：现在对了，在String中反斜杠要转义，在sql语句中反斜杠还需要转义，
    输入一个斜杠需要在String中输入四个反斜杠。

    稿件标题不对：因为upload.jsp的表单里写了enctype="multipart/form-data"，
    所以在servlet里面不能直接用request.getParameter()获取text类型的元素值
    要么在action后面拼接，传参，要么另外解析（二进制）表单

    自增id不对：有问题，比如现在有五个文件名为1~5的视频，如果删除视频4的记录和文件，
    则下次上传文件时，检测到只剩4个记录，则新文件命名为5，就覆盖了原来的视频5
    解决方法：修改文件的重命名策略，搜索video表最大的videoID，命名为这个数字加1的值，
    因为videoID不会重复，所以这样得到的文件名肯定也不会重复。
}

4.
为了维持mvc模式的一致性，
应该限制用户绕过servlet直接访问jsp
可以设置拦截器

3.
现在大致明白了mvc结构。
model：在src里面的java类，被controller调用
controller：就是servlet，
view：就是jsp
mvc工作流程：
根据web.xml的定义，用户请求不同的路径，调用不同的servlet
servlet对request里面的数据进行处理（调用model）
servlet把经过model处理的数据setAttribute到request里
servlet让container把带有处理过的数据的request转发给jsp
jsp显示页面给用户


2.
尝试JDBC，完毕。
注意web项目的结构……折腾了一整天。
在servlet和jsp里面使用jdbc连接数据库的时候
也需要在idea左边的project面板里的external libraries--
--里的tomcat 8.5.28里面添加mysql-connector-java-bin.jar
具体做法是
把这个jar包放在tomcat的安装目录下的/lib/文件夹里面，
然后在菜单栏的file的project structure里面
module -> dependencies -> 右键点击tomcat -> edit -> 加号 -> 选择这个jar包

1.
登录功能的流程应该是index.jsp有login.jsp的链接，
用户在login.jsp填写字段
login.jsp调用servlet进行查询，
servlet根据post的表单在数据库里查询，
成功就返回token，（内容应该为包含该用户名和随机数的字符串的md5。但是为了方便起见，就先将其设置为用户名吧！）
把token作为cookie发送给客户端，
然后重定向到index.jsp
当用户刷新index.jsp的时候，
服务器根据浏览器提交的cookie判断用户是否已经登录，据此展示不同的界面或者重定向。
这里可以关注：cookie窃取和session劫持，cookie的domain参数详解

